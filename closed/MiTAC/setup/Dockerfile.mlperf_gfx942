ARG BASE_IMAGE
FROM $BASE_IMAGE

ARG DEBIAN_FRONTEND=noninteractive

ARG INSTALL_TORCHAO

# Note-1: sqlite3 and libfmt-dev dependencies are for RPD
# Note-2: zip for compressing RPD outputs
RUN apt update \
 && apt install -y \
	libfmt-dev \
	libsqlite3-dev \
	numactl \
	sqlite3 \
	zip \
	nano \
 && rm -rf /var/lib/apt/lists/*

RUN pip install \
	absl-py==2.1.0 \
	datasets==2.20.0 \
	nltk==3.8.1 \
	numpy==1.26.4 \
	py-libnuma==1.2 \
	rouge_score==0.1.2 \
	omegaconf==2.3.0 \
	optuna==4.1.0

WORKDIR /app
RUN git clone https://github.com/mlcommons/inference.git mlperf_inference \
 && cd mlperf_inference/loadgen \
 && git checkout 0910c6e30098b0490c8eb046a59717227aa8520d \
 && git submodule update --init --recursive \
 && CFLAGS="-std=c++14 -O3" python -m pip install .

WORKDIR /app
RUN git clone https://github.com/ROCm/rocm_bandwidth_test --depth 1 rocm_bandwidth_test \
 && cd rocm_bandwidth_test \
 && mkdir build \
 && cd build \
 && cmake -DCMAKE_MODULE_PATH="/app/rocm_bandwidth_test/cmake_modules" -DCMAKE_PREFIX_PATH="/opt/rocm/" .. \
 && make \
 && make install

# RPD
WORKDIR /app
RUN git clone https://github.com/ROCm/rocmprofiledata --depth 1 rocm_profile_data \
 && cd rocm_profile_data \
 && make \
 && make install

# TORCH AO
WORKDIR /app
RUN if [ "$INSTALL_TORCHAO" = "1" ]; then \
     git clone https://github.com/pytorch/ao.git \
	 && cd ao \
	 && git checkout 2e2ce0b8 \
	 && USE_CPP=1 python setup.py develop; \
    fi

# MIXTRAL eval - start
# Copied from https://github.com/mlcommons/inference/commits/master/language/mixtral-8x7b/Dockerfile.eval
# NOTE: there is a bug with 3.12, and no apt_pkg available at the moment, which needed by add-apt-repository
# We change the python version temporarily to 3.10 while we add the required ppa
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 \
 && update-alternatives --set python3 /usr/bin/python3.10 \
 && curl https://bootstrap.pypa.io/get-pip.py | python3 && pip install six && add-apt-repository -y ppa:ondrej/php \
 && update-alternatives --set python3 /usr/bin/python3.12
# Get language dependencies
RUN apt update \
 && apt install -y wget curl libssl-dev libreadline-dev zlib1g-dev autoconf bison build-essential libyaml-dev libreadline-dev libncurses5-dev libffi-dev libgdbm-dev \
                   php8.0 openjdk-8-jdk npm scala dotnet6 zip unzip python3.10-venv \
 && rm -rf /var/lib/apt/lists/*

# MXEval
RUN git clone https://github.com/amazon-science/mxeval.git
SHELL ["/bin/bash", "-c"]
WORKDIR "/app/mxeval"
RUN sed -i 's/sudo//g' /app/mxeval/language_setup/ubuntu.sh
RUN sed -i 's/source/PS1=1 source/g' /app/mxeval/language_setup/ubuntu.sh # Need this to make sure that the "source ~/.bashrc" lines work correctly
RUN sed -i 's/npx tsc/tsc/g' /app/mxeval/mxeval/execution.py # npx tsc runs into permission issues
RUN sed -i 's/apt-get install /apt-get install -y /g' /app/mxeval/language_setup/ubuntu.sh
RUN sed -i 's/apt install /apt install -y /g' /app/mxeval/language_setup/ubuntu.sh
RUN sed -i 's/add-apt-repository /add-apt-repository -y /g' /app/mxeval/language_setup/ubuntu.sh
RUN sed -i 's/perl /yes | perl /g' /app/mxeval/language_setup/ubuntu.sh

RUN DEBIAN_FRONTEND=noninteractive PATH="$HOME/.rbenv/bin:$PATH" bash /app/mxeval/language_setup/ubuntu.sh
# MIXTRAL eval - done

COPY code /lab-mlperf-inference/code
# COPY submission /lab-mlperf-inference/submission
WORKDIR /lab-mlperf-inference/code/

# FIXME: Install this package separately otherwise accuracy computing fails.
RUN pip install \
	evaluate==0.4.3

# ---- Set custom entrypoint for runtime env ----
RUN DEBIAN_FRONTEND=noninteractive PATH="$HOME/.rbenv/bin:$PATH" bash /app/mxeval/language_setup/ubuntu.sh
COPY ../entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["bash"]

